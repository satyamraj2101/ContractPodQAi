# ContractPodAI Documentation Assistant - Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# Node Environment
# =============================================================================
NODE_ENV=production

# =============================================================================
# AWS RDS PostgreSQL Database Configuration
# =============================================================================
# Full connection string (primary method)
DATABASE_URL=postgresql://USERNAME:PASSWORD@RDS_ENDPOINT:5432/DATABASE_NAME

# Individual database connection parameters (alternative to DATABASE_URL)
PGHOST=your-rds-instance.xxxxxx.us-east-1.rds.amazonaws.com
PGPORT=5432
PGUSER=your_db_username
PGPASSWORD=your_db_password
PGDATABASE=contractpodai_docs

# =============================================================================
# Google Gemini AI API Configuration
# =============================================================================
# Required: Get from https://aistudio.google.com/app/apikey
GEMINI_API_KEY=AIzaSyXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# =============================================================================
# OpenAI API Configuration (Optional)
# =============================================================================
# Optional: Used if Gemini API is unavailable
# Get from https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# =============================================================================
# Session Security
# =============================================================================
# Required: Generate a random string for session encryption
# Generate with: openssl rand -base64 32
SESSION_SECRET=your_random_session_secret_here_minimum_32_characters

# =============================================================================
# AWS RDS Setup Instructions
# =============================================================================
# 1. Create RDS PostgreSQL instance in AWS Console
# 2. Configure security group to allow inbound traffic on port 5432 from EC2
# 3. Note the endpoint, username, password, and database name
# 4. Update DATABASE_URL or individual PG* variables above
# 5. Ensure RDS instance is in same VPC as EC2 or configure network access

# =============================================================================
# Quick Start Commands
# =============================================================================
# Local development:
#   cp .env.example .env
#   # Fill in .env with your values
#   npm install
#   npm run db:push
#   npm run dev
#
# Docker deployment:
#   cp .env.example .env
#   # Fill in .env with your values
#   docker-compose up -d
#
# Check database schema:
#   npm run db:studio
